% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ANOVA_split.R
\name{ANOVA_split}
\alias{ANOVA_split}
\title{Splitting data to construct overlays that mimic the four sections of
data used to calculate a one-way ANOVA.}
\usage{
ANOVA_split(x, ...)
}
\arguments{
\item{x}{Either an independent variable (as a character), or a formula
in the form dv ~ iv, where dv is a dependent variable, and iv is an
independent variable.}

\item{y}{Character: What is the name of the dependent variable?}

\item{data}{tibble or data frame: Dataset containing the variables.}

\item{splitLm}{an lm object.}

\item{print.statistic}{Logical: Should the test statistic be printed in the
source table?}

\item{show.warnings}{Logical: Should warnings be shown when converting independent
variables to factors and converting contrasts to sum contrasts?}
}
\value{
a list of five tibbles; the first four representing the four overlays --
the data, the common, the condition, and the residuals -- and a fifth tibble
showing the source table of the analysis.
}
\description{
Splitting data to construct overlays that mimic the four sections of
data used to calculate a one-way ANOVA.
}
\examples{
\dontrun{
# using dplyr to see the data split by condition, assuming a mean common
ToothGrowth \%>\% group_by(supp) \%>\% summarize(mn = mean(len))

# using ANOVA_split
ANOVA_split("supp", "len", ToothGrowth)
ANOVA_split("supp", "len", ToothGrowth, common = median)
ANOVA_split("dose", "len", ToothGrowth)

# using ANOVA_split with formula
ANOVA_split(len~supp, ToothGrowth)

# using ANOVA_split with lm
ANOVA_split(lm(len~supp, ToothGrowth))

# Showing that the sums of the overlays add up to the data

toothGrowthOverlays <- ANOVA_split("supp", "len", ToothGrowth)
SS_common <- toothGrowthOverlays$overlays$common \%>\% .^2 \%>\% sum()
SS_condition <- toothGrowthOverlays$overlays$condition \%>\% .^2 \%>\% sum()
SS_residuals <- toothGrowthOverlays$overlays$residuals \%>\% .^2 \%>\% sum()
SS_data <- toothGrowthOverlays$overlays$data \%>\% .^2 \%>\% sum()
SS_overlays <- SS_common + SS_condition + SS_residuals
all.equal(SS_data, SS_overlays)
}
}
